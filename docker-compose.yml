# See https://druid.apache.org/docs/latest/tutorials/docker/
# Docker UI will be available from http://localhost:8888

volumes:
  metadata_data: {}
  middle_var: {}
  historical_var: {}
  broker_var: {}
  coordinator_var: {}
  router_var: {}
  druid_shared: {}


services:
  postgres:
    container_name: postgres
    image: postgres:latest
    # ports:
    #   - "5432:5432"
    volumes:
      - metadata_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=FoolishPassword
      - POSTGRES_USER=druid
      - POSTGRES_DB=druid

  zookeeper:
    container_name: zookeeper
    image: zookeeper:3.5.10
    # ports:
    #   - "2181:2181"
    environment:
      - ZOO_MY_ID=1

  druid-coordinator:
    image: apache/druid:30.0.1
    container_name: druid-coordinator
    volumes:
      - druid_shared:/opt/shared
      - coordinator_var:/opt/druid/var
      # - ./data:/data
    depends_on:
      - zookeeper
      - postgres
    # ports:
    #   - "8081:8081"
    command:
      - coordinator
    env_file:
      - druid-environment.txt
    healthcheck:
      test: ["CMD-SHELL", "wget -q -O - http://localhost:8081/status/health || exit 1"]
      interval: 10s
      retries: 10
  
  druid-broker:
    image: apache/druid:30.0.1
    container_name: druid-broker
    volumes:
      - broker_var:/opt/druid/var
      # - ./data:/data
    depends_on:
      - zookeeper
      - postgres
      - druid-coordinator
    # ports:
    #   - "8082:8082"
    command:
      - broker
    env_file:
      - druid-environment.txt
    healthcheck:
      test: ["CMD-SHELL", "wget -q -O - http://localhost:8082/druid/broker/v1/readiness || exit 1"]
      interval: 10s
      retries: 10

  druid-historical:
    image: apache/druid:30.0.1
    container_name: druid-historical
    volumes:
      - druid_shared:/opt/shared
      - historical_var:/opt/druid/var
      # - ./data:/data
    depends_on: 
      - zookeeper
      - postgres
      - druid-coordinator
    # ports:
    #   - "8083:8083"
    command:
      - historical
    env_file:
      - druid-environment.txt
    healthcheck:
      test: ["CMD-SHELL", "wget -q -O - http://localhost:8083/druid/historical/v1/readiness || exit 1"]
      interval: 10s
      retries: 10

  druid-middlemanager:
    image: apache/druid:30.0.1
    container_name: druid-middlemanager
    volumes:
      - druid_shared:/opt/shared
      - middle_var:/opt/druid/var
      # - ./data:/data
    depends_on: 
      - zookeeper
      - postgres
      - druid-coordinator
    # ports:
    #   - "8091:8091"
    #   - "8100-8105:8100-8105"
    command:
      - middleManager
    env_file:
      - druid-environment.txt
  
  druid-router:
    image: apache/druid:30.0.1
    container_name: druid-router
    volumes:
      - router_var:/opt/druid/var
      # - ./data:/data
    depends_on:
      - zookeeper
      - postgres
      - druid-coordinator
    ports:
      - "8888:8888"
    command:
      - router
    env_file:
      - druid-environment.txt
    healthcheck:
      test: ["CMD-SHELL", "wget -q -O - http://localhost:8888/status/health || exit 1"]
      interval: 10s
      retries: 10

  kafka:
    image: apache/kafka:3.7.1
    container_name: kafka
    # ports:
    #   - 9092:9092
    healthcheck:
      test: ["CMD-SHELL", "/opt/kafka/bin/kafka-topics.sh --bootstrap-server kafka:9092 --list || exit 1"]
      interval: 15s
      retries: 20
      timeout: 3s
    environment:
      # Overriding any configs wipes the defaults, so most of this is copied from /opt/kafka/config/server.properties
      - KAFKA_PROCESS_ROLES=broker,controller
      - KAFKA_NODE_ID=1
      - KAFKA_CONTROLLER_QUORUM_VOTERS=1@localhost:9093
      - KAFKA_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      # Change advertised.listeners to use the in docker compose network name
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL
      - KAFKA_NUM_NETWORK_THREADS=3
      - KAFKA_NUM_IO_THREADS=8
      - KAFKA_SOCKET_SEND_BUFFER_BYTES=102400
      - KAFKA_SOCKET_RECEIVE_BUFFER_BYTES=102400
      - KAFKA_SOCKET_REQUEST_MAX_BYTES=104857600
      - KAFKA_LOG_DIRS=/tmp/kraft-combined-logs
      - KAFKA_NUM_PARTITIONS=1
      - KAFKA_NUM_RECOVERY_THREADS_PER_DATA_DIR=1
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_LOG_RETENTION_HOURS=168
      - KAFKA_LOG_SEGMENT_BYTES=1073741824
      - KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS=300000
  
  simulation-server:
    image: exadigit-simulation-server
    container_name: simulation-server
    ports:
      - "8080:8080"
    depends_on:
      druid-coordinator:
        condition: service_healthy
      druid-broker:
        condition: service_healthy
      druid-historical:
        condition: service_healthy
      druid-middlemanager:
        condition: service_started
      druid-router:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      - EXADIGIT_ENV=dev
      # - EXADIGIT_ROOT_PATH
      - EXADIGIT_DEBUG_MODE=true
      # - EXADIGIT_JOB_IMAGE
      - DRUID_SERVICE_URL=http://druid-router:8888
      - KAFKA_BOOTSTRAP=kafka:9092
