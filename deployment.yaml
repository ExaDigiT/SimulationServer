kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: exadigit-simulation-server
parameters:
  - name: ENV
    value: stage
  # For some reason, oc will ignore the namespace in templates unless its parameterized
  - name: NAMESPACE
    value: stf218-app
  - name: SERVER_IMAGE
  - name: JOB_IMAGE
objects:
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        env: ${ENV}
        app: exadigit-simulation-server
      name: ${ENV}-exadigit-simulation-server
      namespace: ${NAMESPACE}
    spec:
      replicas: 1
      selector:
        matchLabels:
          env: ${ENV}
          app: exadigit-simulation-server
      template:
        metadata:
          name: main
          labels:
            env: ${ENV}
            app: exadigit-simulation-server
        spec:
          serviceAccountName: ${ENV}-exadigit-simulation-server
          containers:
          - image: ${SERVER_IMAGE}
            name: main
            imagePullPolicy: Always
            env:
              - name: EXADIGIT_ENV
                value: ${ENV}
              - name: EXADIGIT_ROOT_PATH
                value: "/exadigit/api"
              - name: EXADIGIT_DEBUG_MODE
                value: "false"
              - name: EXADIGIT_JOB_IMAGE
                value: ${JOB_IMAGE}
            envFrom:
              - secretRef:
                  # TODO Should split out the kafka, druid tables, and secrets
                  name: prod-infra-envconfig-service-sens-creds
            resources:
              requests:
                cpu: 500m
                memory: 100Mi
              limits:
                cpu: 1000m
                memory: 500Mi
      strategy:
        type: Recreate
  - kind: Service
    apiVersion: v1
    metadata:
      name: ${ENV}-exadigit-simulation-server
      namespace: ${NAMESPACE}
      labels:
        env: ${ENV}
        app: exadigit-simulation-server
    spec:
      ports:
        - name: http
          protocol: TCP
          port: 8080
          targetPort: 8080
      type: ClusterIP
      selector:
        env: ${ENV}
        app: exadigit-simulation-server
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      namespace: ${NAMESPACE}
      name: ${ENV}-exadigit-simulation-server
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      namespace: ${NAMESPACE}
      name: ${ENV}-exadigit-simulation-server
    rules:
    - apiGroups: ["batch"]
      resources:
      - "jobs"
      verbs:
      - "create"
      - "list"
      - "get"
      - "patch"
      - "watch"
      - "delete"
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      namespace: ${NAMESPACE}
      name: ${ENV}-exadigit-simulation-server
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: Role
      name: ${ENV}-exadigit-simulation-server
    subjects:
    - kind: ServiceAccount
      name: ${ENV}-exadigit-simulation-server
